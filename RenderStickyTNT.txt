import java.util.Random;
import net.minecraft.client.Minecraft;
import org.lwjgl.opengl.GL11;

public class RenderStickyTNT extends um
{

    private vl renderblocks;
    private Random random;
    public boolean field_27004_a;

    public RenderStickyTNT()
    {
        renderblocks = new vl();
        random = new Random();
    }

    public void a(nn entity, double d, double d1, double d2, 
            float f, float f1)
    {
        random.setSeed(187L);
        fq entityitem = new fq(ModLoader.getMinecraftInstance().f, d, d1, d2, new aan(pb.am));
        aan itemstack = entityitem.a;
        GL11.glPushMatrix();
        byte byte0 = 1;
        if(entityitem.a.a > 1)
        {
            byte0 = 2;
        }
        if(entityitem.a.a > 5)
        {
            byte0 = 3;
        }
        if(entityitem.a.a > 20)
        {
            byte0 = 4;
        }
        GL11.glTranslatef((float)d, (float)d1, (float)d2);
        GL11.glEnable(32826);
        if(itemstack.c < 256 && vl.a(pb.m[itemstack.c].d()))
        {
            if(((EntityStickyTNT)entity).onEntity != null)
            {
                GL11.glRotatef(360F - ((EntityStickyTNT)entity).onEntity.u, 0.0F, 1.0F, 0.0F);
            }
            a("/terrain.png");
            float f4 = 0.35F;
            int k = pb.m[itemstack.c].d();
            if(k == 1 || k == 19 || k == 12 || k == 2)
            {
                f4 = 0.5F;
            }
            GL11.glScalef(f4, f4, f4);
            for(int j1 = 0; j1 < byte0; j1++)
            {
                GL11.glPushMatrix();
                if(j1 > 0)
                {
                    float f7 = ((random.nextFloat() * 2.0F - 1.0F) * 0.2F) / f4;
                    float f10 = ((random.nextFloat() * 2.0F - 1.0F) * 0.2F) / f4;
                    float f13 = ((random.nextFloat() * 2.0F - 1.0F) * 0.2F) / f4;
                    GL11.glTranslatef(f7, f10, f13);
                }
                float f8 = 1.0F;
                this.f.a(pb.m[itemstack.c], itemstack.i(), f8);
                GL11.glPopMatrix();
            }

        } else
        if(itemstack.a().c())
        {
            GL11.glScalef(0.5F, 0.5F, 0.5F);
            a("/gui/items.png");
            for(int i = 0; i <= 1; i++)
            {
                int l = itemstack.a().a(itemstack.i(), i);
                float f5 = 1.0F;
                if(field_27004_a)
                {
                    int k1 = yr.e[itemstack.c].b(itemstack.i(), i);
                    float f11 = (float)(k1 >> 16 & 0xff) / 255F;
                    float f14 = (float)(k1 >> 8 & 0xff) / 255F;
                    float f16 = (float)(k1 & 0xff) / 255F;
                    GL11.glColor4f(f11 * f5, f14 * f5, f16 * f5, 1.0F);
                }
                func_40267_a(l, byte0);
            }

        } else
        {
            GL11.glScalef(0.5F, 0.5F, 0.5F);
            int j = itemstack.b();
            if(itemstack.c < 256)
            {
                a("/terrain.png");
            } else
            {
                a("/gui/items.png");
            }
            if(field_27004_a)
            {
                int i1 = yr.e[itemstack.c].b(itemstack.i(), 0);
                float f6 = (float)(i1 >> 16 & 0xff) / 255F;
                float f9 = (float)(i1 >> 8 & 0xff) / 255F;
                float f12 = (float)(i1 & 0xff) / 255F;
                float f15 = 1.0F;
                GL11.glColor4f(f6 * f15, f9 * f15, f12 * f15, 1.0F);
            }
            func_40267_a(j, byte0);
        }
        GL11.glDisable(32826);
        GL11.glPopMatrix();
    }

    private void func_40267_a(int i, int j)
    {
        adz tessellator = adz.a;
        float f = (float)((i % 16) * 16 + 0) / 256F;
        float f1 = (float)((i % 16) * 16 + 16) / 256F;
        float f2 = (float)((i / 16) * 16 + 0) / 256F;
        float f3 = (float)((i / 16) * 16 + 16) / 256F;
        float f4 = 1.0F;
        float f5 = 0.5F;
        float f6 = 0.25F;
        for(int k = 0; k < j; k++)
        {
            GL11.glPushMatrix();
            if(k > 0)
            {
                float f7 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
                float f8 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
                float f9 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
                GL11.glTranslatef(f7, f8, f9);
            }
            GL11.glRotatef(180F - e.i, 0.0F, 1.0F, 0.0F);
            tessellator.b();
            tessellator.b(0.0F, 1.0F, 0.0F);
            tessellator.a(0.0F - f5, 0.0F - f6, 0.0D, f, f3);
            tessellator.a(f4 - f5, 0.0F - f6, 0.0D, f1, f3);
            tessellator.a(f4 - f5, 1.0F - f6, 0.0D, f1, f2);
            tessellator.a(0.0F - f5, 1.0F - f6, 0.0D, f, f2);
            tessellator.a();
            GL11.glPopMatrix();
        }

    }
}
